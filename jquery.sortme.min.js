!function ($) { var downArrow = '\u25bc', upArrow = '\u25b2', settings = {}, color = function (r, t, o, n) { for (o = 3; o--; r[o] = 0 > n ? 0 : n > 255 ? 255 : 0 | n) n = r[o] + t; return r }, changeBackgroundColor = function ($el, amount) { var c = $el.css("background-color"); c = eval("[" + c.substr(4, c.length - 5) + "]"); var newColor = color(c, amount); $el.css("background-color", "rgb(" + newColor.toString() + ")") }, isNumberType = function (r) { var t = !0; return r.forEach(function (r) { isNaN(parseFloat(r)) && (t = !1) }), t }, updateThStyle = function (r, t) { r.addClass("sort-me-col"), width = parseFloat(r.css("width").replace("px", "")), r.css("width", width + 14), r.html(r.html() + '<span class="sort-me-arrow" style="float:right" data-js-sortdesc="' + t + '">' + (t ? downArrow : upArrow) + "</span>"), changeBackgroundColor(r, -10) }, sort = function (r) { var t, o = $(r.currentTarget), n = o.closest("table"), e = n.find("thead tr th.sort-me-col"), a = !0; if (e.length) { n.find("tbody tr td.sort-me-val").toArray().forEach(function (r) { var t = $(r); t.removeClass("sort-me-val"), changeBackgroundColor(t, 10) }), t = parseFloat(e.css("width").replace("px", "")), e.css("width", t - 14); var s = e.find(".sort-me-arrow"), c = s.data("jsSortdesc"); if (s.remove(), changeBackgroundColor(e, 10), e.get(0) == o.get(0) && c) a = !1; else if (e.removeClass("sort-me-col"), !c) return } var l = o.index(), i = n.find("tbody tr").toArray(), d = !1, u = i.map(function (r) { var t = $(r).find("td")[l]; return t ? t.innerText : (d = !0, null) }); if (d) return void console.log("jquery.sortme unable to sort table probably due to a td with a colspan"); updateThStyle(o, a), isNumberType(u) && (u = u.map(function (r) { return parseFloat(r) })); var f = 0, h = []; u.forEach(function (r) { h.push({ ind: f, val: r }), f++ }), h.sort(function (r, t) { return r.val > t.val ? a ? -1 : 1 : r.val < t.val ? a ? 1 : -1 : 0 }), n.find("tbody tr").remove(); var v = n.find("tbody"); h.forEach(function (r) { v.append(i[r.ind]) }), v.find("tr td:nth-child(" + (l + 1) + ")").toArray().forEach(function (r) { var t = $(r); t.addClass("sort-me-val"), changeBackgroundColor(t, -10) }) }, init = function (r, t) { if (settings.serverSortedColumn) { var o = $(t).find(settings.serverSortedColumn); if (o.length) { var n = o.index(), e = o.closest("table"), a = e.find("tbody tr td:nth-child(" + (n + 1) + ")").toArray(); updateThStyle(o, !settings.serverSortedAsc), a.forEach(function (r) { var t = $(r); t.addClass("sort-me-val"), changeBackgroundColor(t, -10) }) } } $(t).find("th").on("click", function (r) { sort(r) }) }; $.fn.sortme = function (r) { return $.extend(settings, r), this.each(init), this } }(jQuery);